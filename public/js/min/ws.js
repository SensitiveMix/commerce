/*! live-0.0.0.js 2016-06-03 */
function WS_Connect () { iLog('开始连接WS'); var a = WS_Config.SocketServers.shift(); WS_Config.SocketServer = a, WS_Config.SocketServers.push(a), WS_ConnectWs(WS_Config.SocketServer) } function WS_ConnectWs (a) { WS_Soc = io.connect(a), WS_Soc.on('connect', function () { iLog('ws连接成功'); var a = {}; a.Type = 'UL_Add', a.RoomID = WS_SysArg.RoomID, a.Data = [], a.Data.length = 0, a.Data.push(GetSimpleUInfo()), WS_Soc.emit('Message', a), IsLoaded() }), WS_Soc.on('Message', function (a) { iLog(a), ReceiveInfo(jQuery.parseJSON(a)) }), WS_Soc.on('disconnect', function () { iLog('断线重连') }) } function WS_PostInfo (a) { WS_Soc.emit('Message', a) } function iLog (a) {}Is_WS = ibrowser.mobile; var WS_Config = {}; WS_Config.RemoteXmlUrl = '/_Server.xml', WS_Config.JsReciveFun = 'ReceiveInfo', WS_Config.SocketServers = iWsServersStr.split(','), WS_Config.SocketServer = '', WS_Config.SnKey = '', WS_Config.TimeOutInt = 3e3; var WS_Soc, WS_SysArg = {}; WS_SysArg.RoomID = iRoomID; var WS_ValidateArg = {}, WS_Timer = {}; WS_Timer.MsgTime = 0, WS_Timer.KeepLiveInterval = 0, $(function () { Is_WS && WS_Connect() })
